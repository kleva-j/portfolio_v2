name: App CI

on:
  push:
    # Run on all branches
    branches:
      - "*"
    # Run only if files modified are not docs
    paths-ignore:
      - "*.md"
  pull_request:
    # Run on all branches
    branches:
      - "*"
    # Run only if files modified are not docs
    paths-ignore:
      - "*.md"

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  VITE_APP_EMAILJS_SERVICE_ID: ${{ secrets.VITE_APP_EMAILJS_SERVICE_ID }}
  VITE_APP_EMAILJS_TEMPLATE_ID: ${{ secrets.VITE_APP_EMAILJS_TEMPLATE_ID }}
  VITE_APP_EMAILJS_PUBLIC_KEY: ${{ secrets.VITE_APP_EMAILJS_PUBLIC_KEY }}

jobs:

  # Build & Test
  buildAndTest:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: Setup Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Get store directory
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      # pnpm cache
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install
      - name: Install deps (with cache)
        run: pnpm install

      # Build
      - name: BUILD
        run: pnpm build:ci

      # Test
      - name: TEST
        run: pnpm test:ci

      # Upload dist artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/

      # Upload coverage artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/lcov.info

  coverage:
    name: Coverage analysis
    needs: buildAndTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ env.GITHUB_TOKEN }}

      # Donwload coverage artifacts
      - uses: actions/download-artifact@v2
        with:
          name: coverage

      # Update coverage file to codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info

  # Deploy to gh pages
  deploy:
    name: Deploy
    # Deploy only for main branch
    if: github.ref == 'refs/heads/main'
    needs: buildAndTest
    runs-on: ubuntu-latest
    # Manual deployment
    # See https://devblogs.microsoft.com/devops/i-need-manual-approvers-for-github-actions-and-i-got-them-now/
    environment:
      name: development
      url: https://github.com/kleva-j/portfolio_v2
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Download dist artifacts
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      # # Deploy dist folder to gh pages
      # - name: DEPLOY
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ env.GITHUB_TOKEN }}
      #     publish_dir: ./dist
      #     user_name: ${{ secrets.GIT_AUTHOR_NAME }}
      #     user_email: ${{ secrets.GIT_AUTHOR_EMAIL }}
